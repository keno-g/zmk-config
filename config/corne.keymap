/*
 * Copyright (c) 2020 The ZMK Contributors

 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
//#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

//&out OUT_BLE //prioritises bluetooth over USB

#define LETTERS     0
#define L_MAIN      1 //Layer+
#define NAVIGATION  2
#define NUMBERS     3
#define MOUSE       4
#define F_MEDIA     5
#define BLUETOOTH   6


//Enough time for me to use sticky modifiers
&sk {
     release-after-ms = <2000>;
     quick-release;
};

// Added period and forward slash to default continue list
&caps_word {
continue-list = <UNDERSCORE BSPC MINUS PERIOD SLASH>;
};

// Mouse movement and mouse wheel speed and acceleration settings
&mmv {    
        time-to-max-speed-ms = <500>;
        acceleration-exponent=<1>;
};
&mwh {    
        time-to-max-speed-ms = <2000>;
        acceleration-exponent=<0>;
};


/ {
// Key Positions Index for Combos
// ________________________________________________________________________________________________________
// |   0  |   1  |   2  |   3  |   4  |   5  |                  |   6  |   7  |   8  |   9  |  10  |  11  |
// |  12  |  13  |  14  |  15  |  16  |  17  |                  |  18  |  19  |  20  |  21  |  22  |  23  |
// |  24  |  25  |  26  |  27  |  28  |  29  |                  |  30  |  31  |  32  |  33  |  34  |  35  |
//                             |  36  |  37  |  38  |    |  39  |  40  |  41  |
	
        combos {
                compatible = "zmk,combos";
                        combo_shift {
                                timeout-ms = <20>;
                                key-positions = <2 3>;
                                layers = <0 3>;
                                bindings = <&sk LSHFT>;                      
                        };

                        // workaround as default &kp C_AL_LOCK function does not work in Windows
                        combo_lock_computer {
                                timeout-ms = <30>;
                                key-positions = <8 9 10>;
                                bindings = <&kp LG(L)>;                      
                        };

                        combo_reset_keyboard {
                                timeout-ms = <20>;
                                key-positions = <18 19>;
                                layers = <6>;
                                bindings = <&reset>;                      
                        };

                        combo_bootloader {
                                timeout-ms = <20>;
                                key-positions = <30 31>;
                                layers = <6>;
                                bindings = <&bootloader>;                      
                        };


        };

        macros {
                
                //Macro to type £
                sterling: sterling {
                label = "STERLING";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <20>;
                tap-ms = <20>;
                bindings
                        = <&macro_press   &kp LALT>
                        , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N3>
                        , <&macro_release &kp LALT>
                        ;
                };
                
                //Macro to type €
                euro: euro {
                label = "EURO";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <20>;
                tap-ms = <20>;
                bindings
                        = <&sk LALT &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
                //        = <&macro_press   &kp LALT>
                //        , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
                //        , <&macro_release &kp LALT>
                        ;
                };

        };



        behaviors {
                //Mod-Morph to input 9 or (with shift) < in HALMAK layout
                N9_LT: N9_LT {
                        compatible = "zmk,behavior-mod-morph";
                        label = "&N9_LT";
                        #binding-cells = <0>;
                        bindings = <&kp N9>, <&kp LESS_THAN>;
                        mods = <(MOD_LSFT)>;
                };
                
                //Mod-Morph to input 0 or (with shift) > in HALMAK layout
                N0_GT: N0_GT {
                        compatible = "zmk,behavior-mod-morph";
                        label = "&N0_GT";
                        #binding-cells = <0>;
                        bindings = <&kp N0>, <&kp GREATER_THAN>;
                        mods = <(MOD_LSFT)>;
                };
                
                //Mod-Morph to input comma or (with shift) open parenthesis in HALMAK layout
                comma_lpar: comma_lpar {
                        compatible = "zmk,behavior-mod-morph";
                        label = "&COMMA_LPAR";
                        #binding-cells = <0>;
                        bindings = <&kp COMMA>, <&kp LPAR>;
                        mods = <(MOD_LSFT)>;
                };
               
                //Mod-Morph to input period or (with shift) close parenthesis in HALMAK layout
                dot_rpar: dot_rpar {
                        compatible = "zmk,behavior-mod-morph";
                        label = "&DOT_RPAR";
                        #binding-cells = <0>;
                        bindings = <&kp KP_DOT>, <&kp RPAR>;
                        mods = <(MOD_LSFT)>;
                };
               
                //Mod-Morph to input % or (with shift) /
                percent_divide: percent_divide {
                        compatible = "zmk,behavior-mod-morph";
                        label = "&PERCENT_DIVIDE";
                        #binding-cells = <0>;
                        bindings = <&kp PERCENT>, <&kp KP_DIVIDE>;
                        mods = <(MOD_LSFT)>;
                };
               
/*                //Mod-Morph to input # or (with shift) £ 
                hash_sterling: hash_sterling {
                        compatible = "zmk,behavior-mod-morph";
                        label = "&HASH_STERLING";
                        #binding-cells = <0>;
                        bindings = <&kp HASH>, <&STERLING>;
                        mods = <(MOD_LSFT)>;
                };
                
                //Mod-Morph to input $ or (with shift) € 
                dollar_euro: dollar_euro {
                        compatible = "zmk,behavior-mod-morph";
                        label = "&DOLLAR_EURO";
                        #binding-cells = <0>;
                        bindings = <&kp DOLLAR>, <&EURO>;
                        mods = <(MOD_LSFT)>;
                };
*/                
        };
	
       

        keymap {
                compatible = "zmk,keymap";


                letters {
//                 LETTERS
//                _________________________________________________________________________________________
//              |    |  w  |  l  |  r  |  b   |  z      |             | ;: |  q  |  u  |  d  |  j  |TEST|
//              |    |     |   Shift   |      |         |             |    |     |  Lock Computer  |    |
//
//              |    |  s  |  h  |  n  |  t   |  ,(     |             | .) |  a  |  e  |  o  |  i  |TEST|
//              |    |  f  |  m  |  v  |  c   |  /?     |             | g  |  p  |  x  |  k  |  y  |TEST|
//                                     |Layer+|NavMoment|Layer+| |Bspc|Space|Bspc| 

                                        bindings = <
                &none   &kp W  &kp L  &kp R  &kp B      &kp Z                                     &kp SEMICOLON  &kp Q  &kp U  &kp D  &kp J  &kp LA(KP_N0 KP_N1 KP_N6 KP_N3)   
                &none   &kp S  &kp H  &kp N  &kp T      &comma_lpar                               &dot_rpar   &kp A  &kp E  &kp O  &kp I  &STERLING   
                &none   &kp F  &kp M  &kp V  &kp C      &kp SLASH                                 &kp G  &kp P  &kp X  &kp K  &kp Y  &EURO   
                                             &to L_MAIN &mo NAVIGATION  &to L_MAIN      &kp BSPC  &kp SPACE  &kp BSPC  
                        >;
                };

                l_main {
//                 Layer+
//              ____________________________________________________________________________________________________________
//              |    |          |       |     |       |         |             |     |    |    |    |    Bluetooth      |    |
//              |    |Navigation|Numbers|Mouse|F&Media|         |             |     |    |    |    |ToggleLetterLayouts|    |
//              |    |          |       |     |       |         |             |     |    |    |    |                   |    |
//                                            |Layer+ |NavMoment|Layer+| |Bspc|Space|Bspc| 

                        bindings = <
                &none   &none           &none      &none        &none        &none                                       &none   &none   &none   &none   &to BLUETOOTH  &none   
                &none   &to NAVIGATION  &to NUMBERS  &to MOUSE  &to F_MEDIAss  &none                                       &none   &none   &none   &none   &none          &none   
                &none   &none           &none      &none        &none        &none                                       &none   &none   &none   &none   &none          &none   
                                                                &to L_MAIN   &trans  &to L_MAIN     &to LETTERS  &none   &to LETTERS  
                        >;
                };

                navigation {
//              /* NAVIGATION
//              _______________________________________________________________________________________________________
//              |    |Esc   |Ctrl-Y|Ctrl-A|CapsWords|  Ctrl-Z  |             |Insert  |F2  |  Up  |Delete  |     |    |
//              |    |Ctrl  |Tab   | Alt  | Shift   |   Win    |             |Enter   |Left| Down |Right   |     |    |
//              |    |Ctrl-Z|Ctrl-X|Ctrl-V| Ctrl-C  |    `     |             |DropDown|Home|PageUp|PageDown| End |    |
//                                        | Layer+  |Nav Moment|Layer+| |Bspc|Space   |Bspc| 

                        bindings = <
                        &none   &kp ESC    &kp LC(Y)  &kp LC(A)  &caps_word  &kp LC(Z)                                   &kp INS     &kp F2     &kp UP    &kp DEL    &none    &none   
                        &none   &sk LCTRL  &kp TAB    &sk LALT   &sk LSHIFT  &sk LGUI                                    &kp ENTER   &kp LEFT   &kp DOWN  &kp RIGHT  &none    &none   
                        &none   &kp LC(Z)  &kp LC(X)  &kp LC(V)  &kp LC(C)   &kp GRAVE                                   &kp LS(F10) &kp HOME   &kp PG_UP &kp PG_DN  &kp END  &none   
                                                                         &to L_MAIN  &trans  &to L_MAIN      &kp BSPC    &kp SPACE  &kp BSPC  
                        >;
                };

                numbers {
//               NUMBERS     
//              __________________________________________________________________________________________
//              |     | ` ~ | , ( | . ) | ' "  |  \ |    |             | ; : | [ { | - _ | = + | ] } |    |
//              |     |     |   Shift   |      |         |             |     |     |     |     |     |    |
//
//              |     | 1 ! | 2 @ | 3 # | 4 $  |  5 %    |             | 6 ^ | 7 & | 8 * | 9 < | 0 > |    |
//              |     |  !  |  @  | # £ | $ €  |  % /    |             |  ^  |  &  |  *  |  <  |  >  |    |
//                                     |Layer+|NavMoment|Layer+| |Bspc|Space|Bspc| 

                        bindings = <
                        &none   &kp GRAVE       &comma_lpar    &dot_rpar      &kp SQT        &kp BACKSLASH                             &kp SEMI  &kp LBKT  &kp MINUS  &kp EQUAL  &kp RBKT  &none   
                        &none   &kp N1          &kp N2         &kp N3         &kp N4         &kp N5                                    &kp N6  &kp N7  &kp N8  &N9_LT   &N0_GT   &none   
                        &none   &kp EXCLAMATION &kp AT         &kp HASH &kp DOLLAR /*&hash_sterling &dollar_euro*/   &percent_divide                           &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LESS_THAN  &kp GREATER_THAN  &none   
                                                                              &to L_MAIN     &trans  &to L_MAIN      &kp BSPC  &kp SPACE  &kp BSPC  
                        >;
                };

                mouse {
//               MOUSE       
//              ____________________________________________________________________________________________________________
//              |    |    |   |   |LeftClick|         |             |     |          |MouseUp  |          |           |    |
//              |    |Ctrl|Tab|Alt|Shift    |Win      |             |     |MouseLeft |MouseDown|MouseRight|RightClick |    |
//              |    |    |   |   |         |         |             |     |ScrollLeft|ScrollUp |ScrollDown|ScrollRight|    |
//                                |Layer+   |NavMoment|Layer+| |Bspc|Space|Bspc      | 

                        bindings = <
                        &none   &kp ESC    &none   &none     &mkp LCLK   &none                                    &none   &none                 &mmv MOVE_VERT(-3500)   &none                  &none                &none   
                        &none   &sk LCTRL  &kp TAB &sk LALT  &sk LSHIFT  &sk LGUI                                 &none   &mmv MOVE_HOR(-3500)  &mmv MOVE_VERT(3500)  &mmv MOVE_HOR(3500)    &mkp RCLK            &none   
                        &none   &none      &none   &none     &none       &none                                    &none   &mwh SCROLL_HOR(-15)  &mwh SCROLL_VERT(15)   &mwh SCROLL_VERT(-15)  &mwh SCROLL_HOR(15)  &none   
                                                             &to L_MAIN  &trans  &to L_MAIN     &kp BSPC  &kp SPACE  &kp BSPC  
                        >;
                };

                f_media {
//               F_MEDIA     
//              __________________________________________________________________________________________________________
//              |    |  F1  |  F2  |  F3  |  F4  |  F5     |             |BrightDown|BrightUp|VolMute|VolDown|VolUp |    |
//              |    | Ctrl |  Tab |  Alt | Shift|  Win    |             |MuteMic   |        |       |       |      |    |
//              |    |  F6  |  F7  |  F8  |  F9  |  F10    |             |DropDown  |  F11   |  F12  |       |      |    |
//                                        |Layer+|NavMoment|Layer+| |Bspc|Space|Bspc| 
                        bindings = <
                        &none   &kp F1     &kp F2  &kp F3    &kp F4      &kp F5                                    &kp C_BRI_DN  &kp C_BRI_UP  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none   
                        &none   &sk LCTRL  &kp TAB &sk LALT  &sk LSHIFT  &sk LGUI                                  &none         &none         &none       &none         &none         &none   
                        &none   &kp F6     &kp F7  &kp F8    &kp F9      &kp F10                                   &kp LS(F10)   &kp F11       &kp F12     &none         &none         &none   
                                                             &to L_MAIN  &trans  &to L_MAIN     &kp BSPC   &kp SPACE  &kp BSPC  
                        >;
                };

                bluetooth {
//               BLUETOOTH   
//              ___________________________________________________________________________________
//              |    |BT1 |BT2 |BT3 |BT4   |ResetActive BT|        |    |     |    |    |    |    |
//              |    |BT5 |    |    |      |              |        |    |     |    |    |    |    |
//              |    |    |    |    |      |              |        |  Reset   |    |    |    |    |
//
//              |    |    |    |    |      |              |        |    |     |    |    |    |    |
//              |    |    |    |    |      |              |        |Bootloader|    |    |    |    |
//
//                                  |Layer+|NavMoment     |Layer+| |Bspc|Space|Bspc| 

                        bindings = <
                        &none   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                                &none   &none   &none   &none   &none   &none   
                        &none   &bt BT_SEL 4    &none         &none         &none         &none                                     &none   &none   &none   &none   &none   &none
                        &none   &none           &none         &none         &none         &none                                     &none   &none   &none   &none   &none   &none   
                                                                            &to L_MAIN    &transs  &to L_MAIN      &kp BSPC  &kp SPACE  &kp BSPC  
                        >;
                };




        };
};
